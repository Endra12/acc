This file describes the framework ACC and other projects of mine are built upon.
It's assumed that you are already a flashable zip and/or Magisk module creator.


Core File Structure

_builds/ (local only dir)
  $id-$versionCode/
    $id-$versionCode/tar.gz (for front-end apps)
    $id-$versionCode.zip (flashable)
    install-tarball.sh (copy)

_misc/ (local only dir)
  random_dir/
  random_file

 $id/
  default-config.txt
  install-zip.sh (universal shell-based-zip flasher)
  service.sh (initialization script)
  setup-busybox.sh
  uninstall.sh

bin/
  $id-uninstaller.zip (generated by build.sh; update-binary is a copy of $id/uninstall.sh)

META-INF/com/google/android/
  update-binary (copy of install.sh)
  updater-script

.gitattributes
.gitignore
build.bat
build.sh
bundle.bat
bundle.sh (copies tarball and install-tarball.sh to front-end-src-code/app/src/main/res/raw/)
check-syntax.bat
check-syntax.sh
customize.sh (copy of install.sh, for Magisk)
framework-details.txt (this file)
install.sh (main installer)
install-online.sh (upgrader, online installer)
install-tarball.sh
License.md
module.prop
README.md
TODO.txt


Typical File Structure, Taking ACC's as Example (id=acc)

_builds/ (local only dir)
  acc_v2020.4.27-rc_(202004270)/
    acc_v2020.4.27-rc_(202004270).tar.gz (for front-end apps)
    acc_v2020.4.27-rc_(202004270).zip (flashable)
    install-tarball.sh (copy)

_misc/ (local only dir)
  random_dir/
  random_file


acc/

  translations/
    pt-PT/
      README.md
      strings.sh

  acc.sh
  acca.sh
  accd.sh
  apply-on-boot.sh
  apply-on-plug.sh
  batt-info.sh
  charging-switches.txt
  cycle-switches.sh
  default-config.txt
  install-zip.sh (universal shell-based-zip flasher)
  mtk-madness.sh
  oem-custom.sh
  power-supply-logger.sh
  print-config.sh
  read-ch-curr-ctrl-files-p2.sh
  service.sh (initialization script)
  set-prop.sh
  setup-busybox.sh
  start-accd.sh
  strings.sh
  uninstall.sh
  wizard.sh
  write-config.sh


bin/
  acc-uninstaller.zip (generated by build.sh; update-binary is a copy of acc/uninstall.sh)

META-INF/com/google/android/
  update-binary (copy of install.sh)
  updater-script

.gitattributes
.gitignore
build.bat
build.sh
bundle.bat
bundle.sh (copies tarball and install-tarball.sh to front-end-src-code/app/src/main/res/raw/)
check-syntax.bat
check-syntax.sh
customize.sh (copy of install.sh, for Magisk)
framework-details.txt (this file)
install.sh (main installer)
install-online.sh (upgrader, online installer)
install-tarball.sh
License.md
module.prop
README.md
TODO.txt


Tasks Carried Out By build.sh

1) Check shell syntax in all scripts.

2) Update version and versionCode in module.prop (values come from README.md > LATEST CHANGES).

3) Set the correct id (from module.prop) in install*.sh, $id/*.sh and bundle.sh.

4) Patch README.md.

5) Update busybox config (from $id/setup-busybox.sh) in $id/uninstall.sh and install scripts.

6) Unify installers for flashable zip (customize.sh and update-binary are copies of install.sh).

7) Generate flashable zips (main & uninstaller) and tarball.
